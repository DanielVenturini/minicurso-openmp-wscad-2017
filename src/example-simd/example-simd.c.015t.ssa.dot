digraph "example-simd.c.015t.ssa" {
overlap=false;
subgraph "main" {
	color="black";
	label="main";
	subgraph cluster_3_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_3_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 4\>:\l\
|#\ i_1\ =\ PHI\ \<i_14(3),\ i_8(2)\>\l\
|if\ (i_1\ \<\ 1048576)\l\
\ \ goto\ \<bb\ 3\>;\l\
else\l\
\ \ goto\ \<bb\ 5\>;\l\
}"];

	fn_3_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 3\>:\l\
|_9\ =\ h_c[i_1];\l\
|_10\ =\ h_a[i_1];\l\
|_11\ =\ h_b[i_1];\l\
|_12\ =\ _10\ *\ _11;\l\
|_13\ =\ _9\ +\ _12;\l\
|h_c[i_1]\ =\ _13;\l\
|i_14\ =\ i_1\ +\ 1;\l\
}"];

	}
	fn_3_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_3_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_3_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 2\>:\l\
|init_array\ ();\l\
|_2\ =\ pthread_self\ ();\l\
|_3\ =\ (long\ int)\ _2;\l\
|_4\ =\ omp_get_thread_num\ ();\l\
|_5\ =\ (long\ int)\ _4;\l\
|stdout.1_6\ =\ stdout;\l\
|fprintf\ (stdout.1_6,\ \"Thread[%lu,%lu]:\ Antes\ do\ simd.\n\",\ _5,\ _3);\l\
|i_7\ =\ 0;\l\
|i_8\ =\ 0;\l\
goto\ \<bb\ 4\>;\l\
}"];

	fn_3_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 5\>:\l\
|if\ (i_1\ ==\ 1048576)\l\
\ \ goto\ \<bb\ 6\>;\l\
else\l\
\ \ goto\ \<bb\ 7\>;\l\
}"];

	fn_3_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 6\>:\l\
|i_15\ =\ i_1;\l\
}"];

	fn_3_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 7\>:\l\
|_16\ =\ pthread_self\ ();\l\
|_17\ =\ (long\ int)\ _16;\l\
|_18\ =\ omp_get_thread_num\ ();\l\
|_19\ =\ (long\ int)\ _18;\l\
|stdout.2_20\ =\ stdout;\l\
|fprintf\ (stdout.2_20,\ \"Thread[%lu,%lu]:\ Depois\ do\ simd.\n\",\ _19,\ _17);\l\
|_21\ =\ pthread_self\ ();\l\
|_22\ =\ (long\ int)\ _21;\l\
|_23\ =\ omp_get_thread_num\ ();\l\
|_24\ =\ (long\ int)\ _23;\l\
|stdout.3_25\ =\ stdout;\l\
|fprintf\ (stdout.3_25,\ \"Thread[%lu,%lu]:\ res:\ %g\n\",\ _24,\ _22,\ res_26(D));\l\
|_27\ =\ 0;\l\
}"];

	fn_3_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{ FREQ:0 |\<bb\ 8\>:\l\
|\<L2\>:\l\
|return\ _27;\l\
}"];

	fn_3_basic_block_0:s -> fn_3_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true, label="[0%]"];
	fn_3_basic_block_2:s -> fn_3_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true, label="[0%]"];
	fn_3_basic_block_3:s -> fn_3_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false, label="[100%]"];
	fn_3_basic_block_4:s -> fn_3_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true, label="[87%]"];
	fn_3_basic_block_4:s -> fn_3_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true, label="[12%]"];
	fn_3_basic_block_5:s -> fn_3_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true, label="[0%]"];
	fn_3_basic_block_5:s -> fn_3_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true, label="[0%]"];
	fn_3_basic_block_6:s -> fn_3_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true, label="[0%]"];
	fn_3_basic_block_7:s -> fn_3_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true, label="[0%]"];
	fn_3_basic_block_8:s -> fn_3_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true, label="[0%]"];
	fn_3_basic_block_0:s -> fn_3_basic_block_1:n [style="invis",constraint=true];
}
}
