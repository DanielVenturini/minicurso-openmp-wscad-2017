
;; Function __bswap_32 (null)
;; enabled by -tree-original


{
  return __builtin_bswap32 (__bsx);
}


;; Function __bswap_64 (null)
;; enabled by -tree-original


{
  return (__uint64_t) __builtin_bswap64 (__bsx);
}


;; Function init_array (null)
;; enabled by -tree-original


{
  int i;

  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Inicializando os arrays.\n");
    int i;
  i = 0;
  goto <D.3368>;
  <D.3367>:;
  h_a[i] = 5.0e-1;
  h_b[i] = 5.0e-1;
  i++ ;
  <D.3368>:;
  if (i <= 1048575) goto <D.3367>; else goto <D.3369>;
  <D.3369>:;
}


;; Function main (null)
;; enabled by -tree-original


{
  int i;
  double res;

    int i;
    double res;
  init_array ();
  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Thread[%lu,%lu]: Antes do simd.\n", (long int) omp_get_thread_num (), (long int) pthread_self ());
  #pragma omp simd
  for (i = 0; i <= 1048575; i++ )
    {
      h_c[i] = h_c[i] + h_a[i] * h_b[i]
    }
  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Thread[%lu,%lu]: Depois do simd.\n", (long int) omp_get_thread_num (), (long int) pthread_self ());
  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Thread[%lu,%lu]: res: %g\n", (long int) omp_get_thread_num (), (long int) pthread_self (), res);
  return 0;
}

