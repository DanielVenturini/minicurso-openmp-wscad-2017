
;; Function __bswap_32 (null)
;; enabled by -tree-original


{
  return __builtin_bswap32 (__bsx);
}


;; Function __bswap_64 (null)
;; enabled by -tree-original


{
  return (__uint64_t) __builtin_bswap64 (__bsx);
}


;; Function init_array (null)
;; enabled by -tree-original


{
  int i;

  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Inicializando os arrays.\n");
    int i;
  i = 0;
  goto <D.3560>;
  <D.3559>:;
  h_a[i] = 5.0e-1;
  h_b[i] = 5.0e-1;
  i++ ;
  <D.3560>:;
  if (i <= 1048575) goto <D.3559>; else goto <D.3561>;
  <D.3561>:;
}


;; Function func (null)
;; enabled by -tree-original


{
  int i;

    int i;
  #pragma omp taskloop num_tasks(4)
    {
      #pragma omp simd
      for (i = 0; i <= 1048575; i++ )
        {
          h_c[i] = h_a[i] * h_b[i]
        }
    }
}


;; Function main (null)
;; enabled by -tree-original


{
  init_array ();
  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Thread[%lu,%lu]: Before parallel region.\n", (long int) omp_get_thread_num (), (long int) pthread_self ());
  #pragma omp parallel num_threads(4)
    {
      {
        #pragma omp single
          {
            fprintf ((struct FILE * restrict) stdout, (const char * restrict) "  Thread[%lu,%lu]: Before tasks.\n", (long int) omp_get_thread_num (), (long int) pthread_self ());
            func ();
          }
      }
    }
  fprintf ((struct FILE * restrict) stdout, (const char * restrict) "Thread[%lu,%lu]: After parallel region.\n", (long int) omp_get_thread_num (), (long int) pthread_self ());
  return 0;
}
return 0;

